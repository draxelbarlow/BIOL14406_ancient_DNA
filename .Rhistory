df3$distribution <- "d2"
two_dist <- rbind(df1, df2, df3)
plot <- ggplot(two_dist) +
geom_histogram(aes(x=value, fill=distribution), alpha = 0.75, position="identity", show.legend=TRUE, bins = 40) +
scale_fill_brewer(palette="Set2") +
geom_vline(aes(xintercept = mean(df1$value)), col="black", size=1) +
theme_bw(base_size = 20)
plot
df1 <- enframe(rnorm(7500, 10, 3))
df2 <- enframe(rnorm(5000, 5, 2))
df3 <- enframe(rnorm(5000, 15, 2))
df1$distribution <- "d1"
df2$distribution <- "d2"
df3$distribution <- "d2"
two_dist <- rbind(df1, df2, df3)
plot <- ggplot(two_dist) +
geom_histogram(aes(x=value, fill=distribution), alpha = 0.75, position="identity", show.legend=TRUE, bins = 40) +
scale_fill_brewer(palette="Set2") +
geom_vline(aes(xintercept = mean(df1$value)), col="black", size=1) +
theme_bw(base_size = 20)
plot
df1 <- enframe(rnorm(7500, 10, 3))
df2 <- enframe(rnorm(5000, 5, 2))
df3 <- enframe(rnorm(5000, 15, 2))
df1$distribution <- "d1"
df2$distribution <- "d2"
df3$distribution <- "d2"
two_dist <- rbind(df1, df2, df3)
plot <- ggplot(two_dist) +
geom_histogram(aes(x=value, fill=distribution), alpha = 0.75, position="identity", show.legend=TRUE, bins = 40) +
scale_fill_brewer(palette="Set2") +
geom_vline(aes(xintercept = mean(df1$value)), col="black", size=1) +
theme_bw(base_size = 20)
# animate plot
anim <- plot +
transition_states(distribution,
transition_length = 1,
state_length = 1
) +
ease_aes('cubic-in-out')
anim
library(gganimate)
df1 <- enframe(rnorm(7500, 10, 3))
df2 <- enframe(rnorm(5000, 5, 2))
df3 <- enframe(rnorm(5000, 15, 2))
df1$distribution <- "d1"
df2$distribution <- "d2"
df3$distribution <- "d2"
two_dist <- rbind(df1, df2, df3)
plot <- ggplot(two_dist) +
geom_histogram(aes(x=value, fill=distribution), alpha = 0.75, position="identity", show.legend=TRUE, bins = 40) +
scale_fill_brewer(palette="Set2") +
geom_vline(aes(xintercept = mean(df1$value)), col="black", size=1) +
theme_bw(base_size = 20)
# animate plot
anim <- plot +
transition_states(distribution,
transition_length = 1,
state_length = 1
) +
ease_aes('cubic-in-out')
anim
df1 <- enframe(rnorm(7500, 10, 3))
df2 <- enframe(rnorm(5000, 5, 2))
df3 <- enframe(rnorm(5000, 15, 2))
df1$distribution <- "d1"
df2$distribution <- "d2"
df3$distribution <- "d2"
two_dist <- rbind(df1, df2, df3)
plot <- ggplot(two_dist) +
geom_histogram(aes(x=value, fill=distribution), alpha = 0.75, position="identity", show.legend=TRUE, bins = 40) +
scale_fill_brewer(palette="Set2") +
geom_vline(aes(xintercept = mean(df1$value)), col="black", size=1) +
theme_bw(base_size = 20)
# animate plot
anim <- plot +
transition_states(distribution,
transition_length = 10,
state_length = 10
) +
ease_aes('cubic-in-out')
anim
df1 <- enframe(rnorm(750, 10, 3))
df2 <- enframe(rnorm(500, 5, 2))
df3 <- enframe(rnorm(500, 15, 2))
df1$distribution <- "d1"
df2$distribution <- "d2"
df3$distribution <- "d2"
two_dist <- rbind(df1, df2, df3)
plot <- ggplot(two_dist) +
geom_histogram(aes(x=value, fill=distribution), alpha = 0.75, position="identity", show.legend=TRUE, bins = 40) +
scale_fill_brewer(palette="Set2") +
geom_vline(aes(xintercept = mean(df1$value)), col="black", size=1) +
theme_bw(base_size = 20)
# animate plot
anim <- plot +
transition_states(distribution,
transition_length = 10,
state_length = 10
) +
ease_aes('cubic-in-out')
anim
df1 <- enframe(rnorm(750, 10, 3))
df2 <- enframe(rnorm(500, 5, 2))
df3 <- enframe(rnorm(500, 15, 2))
df1$distribution <- "d1"
df2$distribution <- "d2"
df3$distribution <- "d2"
two_dist <- rbind(df1, df2, df3)
plot <- ggplot(two_dist) +
geom_histogram(aes(x=value, fill=distribution), alpha = 0.75, position="identity", show.legend=TRUE, bins = 40) +
scale_fill_brewer(palette="Set2") +
geom_vline(aes(xintercept = mean(df1$value)), col="black", size=1) +
theme_bw(base_size = 20)
# animate plot
anim <- plot +
transition_states(distribution,
transition_length = 1,
state_length = 1
) +
ease_aes('cubic-in-out')
anim
df1 <- enframe(rnorm(750, 10, 3))
df2 <- enframe(rnorm(500, 5, 2))
df3 <- enframe(rnorm(500, 15, 2))
df1$distribution <- "d1"
df2$distribution <- "d2"
df3$distribution <- "d2"
two_dist <- rbind(df1, df2, df3)
plot <- ggplot(two_dist) +
geom_histogram(aes(x=value, fill=distribution), alpha = 0.75, position="identity", show.legend=TRUE, bins = 20) +
scale_fill_brewer(palette="Set2") +
geom_vline(aes(xintercept = mean(df1$value)), col="black", size=1) +
theme_bw(base_size = 20)
# animate plot
anim <- plot +
transition_states(distribution,
transition_length = 1,
state_length = 1
) +
ease_aes('cubic-in-out')
anim
df1 <- enframe(rnorm(750, 10, 3))
df2 <- enframe(rnorm(500, 5, 2))
df3 <- enframe(rnorm(500, 15, 2))
df1$distribution <- "d1"
df2$distribution <- "d2"
df3$distribution <- "d2"
two_dist <- rbind(df1, df2, df3)
plot <- ggplot(two_dist) +
geom_histogram(aes(x = value), binwidth = 1, colour = "black", fill = "coral") +
theme_bw(base_size = 20)
# animate plot
anim <- plot +
transition_states(distribution,
transition_length = 1,
state_length = 1
) +
ease_aes('cubic-in-out')
anim
df1 <- enframe(rnorm(750, 10, 3))
df2 <- enframe(rnorm(500, 5, 2))
df3 <- enframe(rnorm(500, 15, 2))
df1$distribution <- "d1"
df2$distribution <- "d2"
df3$distribution <- "d2"
two_dist <- rbind(df1, df2, df3)
plot <- ggplot(two_dist) +
geom_histogram(aes(x = value), binwidth = 1, colour = "black", fill = "coral") +
theme_bw(base_size = 20, axis.text.x = element_blank())
# animate plot
anim <- plot +
transition_states(distribution,
transition_length = 1,
state_length = 1
) +
ease_aes('cubic-in-out')
anim
df1 <- enframe(rnorm(750, 10, 3))
df2 <- enframe(rnorm(500, 5, 2))
df3 <- enframe(rnorm(500, 15, 2))
df1$distribution <- "d1"
df2$distribution <- "d2"
df3$distribution <- "d2"
two_dist <- rbind(df1, df2, df3)
plot <- ggplot(two_dist) +
geom_histogram(aes(x = value), binwidth = 1, colour = "black", fill = "coral") +
theme(base_size = 20, axis.text.x = element_blank())
# animate plot
anim <- plot +
transition_states(distribution,
transition_length = 1,
state_length = 1
) +
ease_aes('cubic-in-out')
anim
df1 <- enframe(rnorm(750, 10, 3))
df2 <- enframe(rnorm(500, 5, 2))
df3 <- enframe(rnorm(500, 15, 2))
df1$distribution <- "d1"
df2$distribution <- "d2"
df3$distribution <- "d2"
two_dist <- rbind(df1, df2, df3)
plot <- ggplot(two_dist) +
geom_histogram(aes(x = value), binwidth = 1, colour = "black", fill = "coral") +
theme_bw(base_size = 20) +
theme(axis.text = element_blank())
# animate plot
anim <- plot +
transition_states(distribution,
transition_length = 1,
state_length = 1
) +
ease_aes('cubic-in-out')
anim
df1 <- enframe(rnorm(750, 10, 3))
df2 <- enframe(rnorm(500, 5, 2))
df3 <- enframe(rnorm(500, 15, 2))
df1$distribution <- "d1"
df2$distribution <- "d2"
df3$distribution <- "d2"
two_dist <- rbind(df1, df2, df3)
plot <- ggplot(two_dist) +
geom_histogram(aes(x = value), binwidth = 1, colour = "black", fill = "coral") +
theme_bw(base_size = 20) +
theme(axis.text = element_blank()) +
labs(x="Phenotypic trait", y="fitness")
# animate plot
anim <- plot +
transition_states(distribution,
transition_length = 1,
state_length = 1
) +
ease_aes('cubic-in-out')
anim
library(tidyverse)
library(gganimate)
library(RColorBrewer)
library(knitr)
library(ape)
my.dat <- rnorm(5000, 100, 5)
my.df <- enframe(my.dat)
plot_hist <- ggplot(my.df) +
geom_density(aes(x = value), colour="black", fill="coral", show.legend=FALSE) +
xlim(50,150) +
xlab("Number of patients") +
theme_bw(base_size = 25)
plot_hist + ggtitle("Prior probability")
library(tidyverse)
library(gganimate)
library(RColorBrewer)
library(knitr)
library(palmerpenguins)
gen_chi <- filter(penguins, species %in% c("Chinstrap", "Gentoo"))
gen_chi <- gen_chi %>% drop_na()
gen_chi
lm(flipper_length_mm ~ body_mass_g, data = gen_chi)
penlm <- summary(lm(flipper_length_mm ~ body_mass_g, data = gen_chi))
penlm
lm(flipper_length_mm ~ body_mass_g, data = gen_chi)
library(tidyverse)
library(gganimate)
library(RColorBrewer)
library(knitr)
library(palmerpenguins)
ice_can <- data.frame(icecream=jitter(1:10, factor=3), cancer=jitter(11:20, factor=5))
plot_scatter2 <- ggplot(ice_can, aes(icecream, cancer)) +
geom_point(cex=5, pch=21, fill="mahogany") +
geom_smooth(method=lm, formula = y~x, se=FALSE, col="black", lwd=1) +
theme_bw(base_size = 20) +
xlab("Ice cream sales (thousand per month)") +
ylab("Dehydration (% admissions per month)") +
ggtitle("r = 0.977, p < 0.01")
plot_scatter2
ice_can <- data.frame(icecream=jitter(1:10, factor=3), cancer=jitter(11:20, factor=5))
plot_scatter2 <- ggplot(ice_can, aes(icecream, cancer)) +
geom_point(cex=5, pch=21, fill="darkbrown") +
geom_smooth(method=lm, formula = y~x, se=FALSE, col="black", lwd=1) +
theme_bw(base_size = 20) +
xlab("Ice cream sales (thousand per month)") +
ylab("Dehydration (% admissions per month)") +
ggtitle("r = 0.977, p < 0.01")
plot_scatter2
ice_can <- data.frame(icecream=jitter(1:10, factor=3), cancer=jitter(11:20, factor=5))
plot_scatter2 <- ggplot(ice_can, aes(icecream, cancer)) +
geom_point(cex=5, pch=21, fill="darkred") +
geom_smooth(method=lm, formula = y~x, se=FALSE, col="black", lwd=1) +
theme_bw(base_size = 20) +
xlab("Ice cream sales (thousand per month)") +
ylab("Dehydration (% admissions per month)") +
ggtitle("r = 0.977, p < 0.01")
plot_scatter2
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
include_graphics("./mink_pic.png")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
a <- rep("test", 50)
b <- sample(c(rep("dead", 20), rep("alive", 30)))
test_group <- data.frame(a, b)
a <- rep("control", 50)
b <- sample(c(rep("dead", 40), rep("alive", 10)))
control_group <- data.frame(a, b)
trials_data <- rbind(test_group, control_group)
names(trials_data) <- c("group", "outcome")
my_chi <- chisq.test(table(trials_data$group, trials_data$outcome))
View(trials_data)
sample1 <- enframe(rbeta(200,1,5))
sample1 <- sample1 %>% mutate(bp = (value * 500) + 10) %>% add_column(method = 1)
sample2 <- enframe(rbeta(200,1,5))
sample2 <- sample2 %>% mutate(bp = (value * 500) + 40) %>% add_column(method = 2)
plot1 <- ggplot(sample1) +
geom_histogram(aes(x=bp), fill="wheat", col="black", position="identity", show.legend=TRUE, bins = 20) +
theme_bw(base_size = 15) +
xlab("fragment length (bp)")
plot2 <- ggplot(sample2) +
geom_histogram(aes(x=bp), fill="darkseagreen1", col="black", position="identity", show.legend=TRUE, bins = 20) +
theme_bw(base_size = 15) +
xlab("fragment length (bp)")
total <- rbind(sample1, sample2)
utest <- wilcox.test(bp ~ method, data=total)
View(total)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
sample1 <- enframe(rbeta(200,1,5))
sample1 <- sample1 %>% mutate(bp = (value * 500) + 10) %>% add_column(method = 1)
sample2 <- enframe(rbeta(200,1,5))
sample2 <- sample2 %>% mutate(bp = (value * 500) + 40) %>% add_column(method = 2)
plot1 <- ggplot(sample1) +
geom_histogram(aes(x=bp), fill="wheat", col="black", position="identity", show.legend=TRUE, bins = 20) +
theme_bw(base_size = 15) +
xlab("fragment length (bp)")
plot2 <- ggplot(sample2) +
geom_histogram(aes(x=bp), fill="darkseagreen1", col="black", position="identity", show.legend=TRUE, bins = 20) +
theme_bw(base_size = 15) +
xlab("fragment length (bp)")
total <- rbind(sample1, sample2)
utest <- wilcox.test(bp ~ method, data=total)
View(total)
View(sample1)
sample1 <- enframe(rbeta(200,1,5))
sample1 <- sample1 %>% mutate(bp = round((value * 500) + 10), 0) %>% add_column(method = 1)
write.csv(sample1, file="extraction1.txt")
sample2 <- enframe(rbeta(200,1,5))
sample2 <- sample2 %>% mutate(bp = (value * 500) + 40) %>% add_column(method = 2)
write.csv(sample2, file="extraction2.txt")
plot1 <- ggplot(sample1) +
geom_histogram(aes(x=bp), fill="wheat", col="black", position="identity", show.legend=TRUE, bins = 20) +
theme_bw(base_size = 15) +
xlab("fragment length (bp)")
plot2 <- ggplot(sample2) +
geom_histogram(aes(x=bp), fill="darkseagreen1", col="black", position="identity", show.legend=TRUE, bins = 20) +
theme_bw(base_size = 15) +
xlab("fragment length (bp)")
total <- rbind(sample1, sample2)
View(sample1)
sample1 <- enframe(rbeta(200,1,5))
sample1 <- sample1 %>% mutate(bp = round((value * 500) + 10), 0) %>% add_column(method = 1)
write.csv(sample1, file="extraction1.txt")
sample2 <- enframe(rbeta(200,1,5))
sample2 <- sample2 %>% mutate(bp = (value * 500) + 40) %>% add_column(method = 2)
write.csv(sample2, file="extraction2.txt")
plot1 <- ggplot(sample1) +
geom_histogram(aes(x=bp), fill="wheat", col="black", position="identity", show.legend=TRUE, bins = 20) +
theme_bw(base_size = 15) +
xlab("fragment length (bp)")
plot2 <- ggplot(sample2) +
geom_histogram(aes(x=bp), fill="darkseagreen1", col="black", position="identity", show.legend=TRUE, bins = 20) +
theme_bw(base_size = 15) +
xlab("fragment length (bp)")
total <- rbind(sample1, sample2)
sample1 <- enframe(rbeta(200,1,5))
sample1 <- sample1 %>% mutate(bp = round((value * 500) + 10)) %>% add_column(method = 1)
write.csv(sample1, file="extraction1.txt")
sample2 <- enframe(rbeta(200,1,5))
sample2 <- sample2 %>% mutate(bp = (value * 500) + 40) %>% add_column(method = 2)
write.csv(sample2, file="extraction2.txt")
plot1 <- ggplot(sample1) +
geom_histogram(aes(x=bp), fill="wheat", col="black", position="identity", show.legend=TRUE, bins = 20) +
theme_bw(base_size = 15) +
xlab("fragment length (bp)")
plot2 <- ggplot(sample2) +
geom_histogram(aes(x=bp), fill="darkseagreen1", col="black", position="identity", show.legend=TRUE, bins = 20) +
theme_bw(base_size = 15) +
xlab("fragment length (bp)")
total <- rbind(sample1, sample2)
utest <- wilcox.test(bp ~ method, data=total)
View(sample1)
sample1 <- enframe(rbeta(200,1,5))
sample1 <- sample1 %>% mutate(bp = round((value * 500) + 10)) %>% add_column(method = 1)
write.csv(sample1, file="extraction1.txt")
sample2 <- enframe(rbeta(200,1,5))
sample2 <- sample2 %>% mutate(bp = round((value * 500) + 40)) %>% add_column(method = 2)
write.csv(sample2, file="extraction2.txt")
plot1 <- ggplot(sample1) +
geom_histogram(aes(x=bp), fill="wheat", col="black", position="identity", show.legend=TRUE, bins = 20) +
theme_bw(base_size = 15) +
xlab("fragment length (bp)")
plot2 <- ggplot(sample2) +
geom_histogram(aes(x=bp), fill="darkseagreen1", col="black", position="identity", show.legend=TRUE, bins = 20) +
theme_bw(base_size = 15) +
xlab("fragment length (bp)")
total <- rbind(sample1, sample2)
utest <- wilcox.test(bp ~ method, data=total)
install.packages("ggmap")
install.packages("mapproj")
source('~/.active-rstudio-document')
74-38
library(tidyverse)
library(gganimate)
library(RColorBrewer)
library(knitr)
library(DiagrammeR)
library(palmerpenguins)
mt <- read.table("./data/human_mtDNA_vertical", header = TRUE)
plot <- ggplot(mt) +
geom_bar(aes(x = Nucleotide, fill = Nucleotide), show.legend=FALSE) +
scale_fill_brewer(palette="Dark2") +
theme_bw(base_size = 25)
plot
1+2+5+6+7+12
3+4+8+9+10+11
install.packages("vitae")
update.packages(pandoc)
update.packages("pandoc")
library(tinytex)
tinytex::install_tinytex()
1+1
Run tinytex::tlmgr_install("pdfcrop")
devtools::install_github("mitchelloharawild/vitae")
library(vitae)
tinytex::tlmgr_install("pdfcrop")
capabilities()
install.packages("linl")
600/72
72*8
200+50+20+40+100
600/70
600/51
62415-55840
((62415-55840)/2) + 62415
((62415-55840)/2) + 55840
library(tidyverse)
library(gganimate)
library(RColorBrewer)
library(knitr)
```{r, out.width = "100%", dpi = 300, echo = FALSE, fig.align='center'}
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
library(tidyverse)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
#> Warning: Using size for a discrete variable is not advised.
1+1
my_sum <- 1+1
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
library(tidyverse)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = <DATA>) +
<GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))
require(devtools)
install_github("gbradburd/SpaceMix",build_vignettes=TRUE)
vignette("spacemix_vignette")
setwd("~/Documents/work_x1_sync/teaching/BIOL10272_Practical_Techniques/2021-2022")
library(slidify)
author("BIOL10272_data_analysis_2")
library(tidyverse)
library(gganimate)
library(RColorBrewer)
library(knitr)
mt <- read.table("./data/human_mtDNA_vertical", header = TRUE)
plot1 <- ggplot(mt) +
geom_bar(aes(x = Nucleotide, fill = Nucleotide), show.legend=FALSE) +
scale_fill_brewer(palette="Dark2") +
theme_bw(base_size = 25)
plot1
my.dat <- rnorm(10000, 10, 1)
my.df <- enframe(my.dat)
plot <- ggplot(my.df) +
geom_histogram(aes(x = value), colour="black", fill="coral", show.legend=FALSE, bins = 20) +
theme_bw(base_size = 25)
plot
dfmy <- read.csv("./data/1000_norm_samp.csv", header=TRUE)
rangmy <- range(dfmy$value)
plot <- ggplot(dfmy) +
geom_histogram(aes(x=value), fill = "#E6AB02", show.legend=FALSE, bins = 40) +
geom_vline(aes(xintercept = mean(value)), col="black", size=1) +
geom_vline(aes(xintercept = rangmy[1]), col="#7570B3", size=2) +
geom_vline(aes(xintercept = rangmy[2]), col="#7570B3", size=2) +
theme_bw(base_size = 30)
plot
setwd("~/Documents/work_x1_sync/teaching/BIOL14406_Living_Systems/2021-2022")
author ("BIOL14406_ancient_DNA")
library(slidify)
author("BIOL14406_ancient_DNA")
library(tidyverse)
library(gganimate)
library(RColorBrewer)
library(knitr)
my.tree1 <- read.tree(text="((((human,chimp),(cat,dog)),(snake,lizard)),fish);")
library(tidyverse)
library(gganimate)
library(RColorBrewer)
library(knitr)
library(ape)
my.tree1 <- read.tree(text="((((human,chimp),(cat,dog)),(snake,lizard)),fish);")
par(mar=c(1,1,1,1))
plot(my.tree1)
